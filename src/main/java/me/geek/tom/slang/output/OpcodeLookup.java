package me.geek.tom.slang.output;

import me.geek.tom.slang.Util;

import java.util.HashMap;
import java.util.Map;

public class OpcodeLookup {

    public static final Map<Integer, String> OPCODE_TO_NAME_LOOKUP = Util.make(new HashMap<>(), m -> {
        m.put(0, "NOP");
        m.put(1, "ACONST_NULL");
        m.put(2, "ICONST_M1");
        m.put(3, "ICONST_0");
        m.put(4, "ICONST_1");
        m.put(5, "ICONST_2");
        m.put(6, "ICONST_3");
        m.put(7, "ICONST_4");
        m.put(8, "ICONST_5");
        m.put(9, "LCONST_0");
        m.put(10, "LCONST_1");
        m.put(11, "FCONST_0");
        m.put(12, "FCONST_1");
        m.put(13, "FCONST_2");
        m.put(14, "DCONST_0");
        m.put(15, "DCONST_1");
        m.put(16, "BIPUSH");
        m.put(17, "SIPUSH");
        m.put(18, "LDC");
        m.put(21, "ILOAD");
        m.put(22, "LLOAD");
        m.put(23, "FLOAD");
        m.put(24, "DLOAD");
        m.put(25, "ALOAD");
        m.put(46, "IALOAD");
        m.put(47, "LALOAD");
        m.put(48, "FALOAD");
        m.put(49, "DALOAD");
        m.put(50, "AALOAD");
        m.put(51, "BALOAD");
        m.put(52, "CALOAD");
        m.put(53, "SALOAD");
        m.put(54, "ISTORE");
        m.put(55, "LSTORE");
        m.put(56, "FSTORE");
        m.put(57, "DSTORE");
        m.put(58, "ASTORE");
        m.put(79, "IASTORE");
        m.put(80, "LASTORE");
        m.put(81, "FASTORE");
        m.put(82, "DASTORE");
        m.put(83, "AASTORE");
        m.put(84, "BASTORE");
        m.put(85, "CASTORE");
        m.put(86, "SASTORE");
        m.put(87, "POP");
        m.put(88, "POP2");
        m.put(89, "DUP");
        m.put(90, "DUP_X1");
        m.put(91, "DUP_X2");
        m.put(92, "DUP2");
        m.put(93, "DUP2_X1");
        m.put(94, "DUP2_X2");
        m.put(95, "SWAP");
        m.put(96, "IADD");
        m.put(97, "LADD");
        m.put(98, "FADD");
        m.put(99, "DADD");
        m.put(100, "ISUB");
        m.put(101, "LSUB");
        m.put(102, "FSUB");
        m.put(103, "DSUB");
        m.put(104, "IMUL");
        m.put(105, "LMUL");
        m.put(106, "FMUL");
        m.put(107, "DMUL");
        m.put(108, "IDIV");
        m.put(109, "LDIV");
        m.put(110, "FDIV");
        m.put(111, "DDIV");
        m.put(112, "IREM");
        m.put(113, "LREM");
        m.put(114, "FREM");
        m.put(115, "DREM");
        m.put(116, "INEG");
        m.put(117, "LNEG");
        m.put(118, "FNEG");
        m.put(119, "DNEG");
        m.put(120, "ISHL");
        m.put(121, "LSHL");
        m.put(122, "ISHR");
        m.put(123, "LSHR");
        m.put(124, "IUSHR");
        m.put(125, "LUSHR");
        m.put(126, "IAND");
        m.put(127, "LAND");
        m.put(128, "IOR");
        m.put(129, "LOR");
        m.put(130, "IXOR");
        m.put(131, "LXOR");
        m.put(132, "IINC");
        m.put(133, "I2L");
        m.put(134, "I2F");
        m.put(135, "I2D");
        m.put(136, "L2I");
        m.put(137, "L2F");
        m.put(138, "L2D");
        m.put(139, "F2I");
        m.put(140, "F2L");
        m.put(141, "F2D");
        m.put(142, "D2I");
        m.put(143, "D2L");
        m.put(144, "D2F");
        m.put(145, "I2B");
        m.put(146, "I2C");
        m.put(147, "I2S");
        m.put(148, "LCMP");
        m.put(149, "FCMPL");
        m.put(150, "FCMPG");
        m.put(151, "DCMPL");
        m.put(152, "DCMPG");
        m.put(153, "IFEQ");
        m.put(154, "IFNE");
        m.put(155, "IFLT");
        m.put(156, "IFGE");
        m.put(157, "IFGT");
        m.put(158, "IFLE");
        m.put(159, "IF_ICMPEQ");
        m.put(160, "IF_ICMPNE");
        m.put(161, "IF_ICMPLT");
        m.put(162, "IF_ICMPGE");
        m.put(163, "IF_ICMPGT");
        m.put(164, "IF_ICMPLE");
        m.put(165, "IF_ACMPEQ");
        m.put(166, "IF_ACMPNE");
        m.put(167, "GOTO");
        m.put(168, "JSR");
        m.put(169, "RET");
        m.put(170, "TABLESWITCH");
        m.put(171, "LOOKUPSWITCH");
        m.put(172, "IRETURN");
        m.put(173, "LRETURN");
        m.put(174, "FRETURN");
        m.put(175, "DRETURN");
        m.put(176, "ARETURN");
        m.put(177, "RETURN");
        m.put(178, "GETSTATIC");
        m.put(179, "PUTSTATIC");
        m.put(180, "GETFIELD");
        m.put(181, "PUTFIELD");
        m.put(182, "INVOKEVIRTUAL");
        m.put(183, "INVOKESPECIAL");
        m.put(184, "INVOKESTATIC");
        m.put(185, "INVOKEINTERFACE");
        m.put(186, "INVOKEDYNAMIC");
        m.put(187, "NEW");
        m.put(188, "NEWARRAY");
        m.put(189, "ANEWARRAY");
        m.put(190, "ARRAYLENGTH");
        m.put(191, "ATHROW");
        m.put(192, "CHECKCAST");
        m.put(193, "INSTANCEOF");
        m.put(194, "MONITORENTER");
        m.put(195, "MONITOREXIT");
        m.put(197, "MULTIANEWARRAY");
        m.put(198, "IFNULL");
        m.put(199, "IFNONNULL");
    });

    public static final Map<String, Integer> NAME_TO_OPCODE_LOOKUP = Util.make(new HashMap<>(), m -> {
        m.put("NOP", 0);
        m.put("ACONST_NULL", 1);
        m.put("ICONST_M1", 2);
        m.put("ICONST_0", 3);
        m.put("ICONST_1", 4);
        m.put("ICONST_2", 5);
        m.put("ICONST_3", 6);
        m.put("ICONST_4", 7);
        m.put("ICONST_5", 8);
        m.put("LCONST_0", 9);
        m.put("LCONST_1", 10);
        m.put("FCONST_0", 11);
        m.put("FCONST_1", 12);
        m.put("FCONST_2", 13);
        m.put("DCONST_0", 14);
        m.put("DCONST_1", 15);
        m.put("BIPUSH", 16);
        m.put("SIPUSH", 17);
        m.put("LDC", 18);
        m.put("ILOAD", 21);
        m.put("LLOAD", 22);
        m.put("FLOAD", 23);
        m.put("DLOAD", 24);
        m.put("ALOAD", 25);
        m.put("IALOAD", 46);
        m.put("LALOAD", 47);
        m.put("FALOAD", 48);
        m.put("DALOAD", 49);
        m.put("AALOAD", 50);
        m.put("BALOAD", 51);
        m.put("CALOAD", 52);
        m.put("SALOAD", 53);
        m.put("ISTORE", 54);
        m.put("LSTORE", 55);
        m.put("FSTORE", 56);
        m.put("DSTORE", 57);
        m.put("ASTORE", 58);
        m.put("IASTORE", 79);
        m.put("LASTORE", 80);
        m.put("FASTORE", 81);
        m.put("DASTORE", 82);
        m.put("AASTORE", 83);
        m.put("BASTORE", 84);
        m.put("CASTORE", 85);
        m.put("SASTORE", 86);
        m.put("POP", 87);
        m.put("POP2", 88);
        m.put("DUP", 89);
        m.put("DUP_X1", 90);
        m.put("DUP_X2", 91);
        m.put("DUP2", 92);
        m.put("DUP2_X1", 93);
        m.put("DUP2_X2", 94);
        m.put("SWAP", 95);
        m.put("IADD", 96);
        m.put("LADD", 97);
        m.put("FADD", 98);
        m.put("DADD", 99);
        m.put("ISUB", 100);
        m.put("LSUB", 101);
        m.put("FSUB", 102);
        m.put("DSUB", 103);
        m.put("IMUL", 104);
        m.put("LMUL", 105);
        m.put("FMUL", 106);
        m.put("DMUL", 107);
        m.put("IDIV", 108);
        m.put("LDIV", 109);
        m.put("FDIV", 110);
        m.put("DDIV", 111);
        m.put("IREM", 112);
        m.put("LREM", 113);
        m.put("FREM", 114);
        m.put("DREM", 115);
        m.put("INEG", 116);
        m.put("LNEG", 117);
        m.put("FNEG", 118);
        m.put("DNEG", 119);
        m.put("ISHL", 120);
        m.put("LSHL", 121);
        m.put("ISHR", 122);
        m.put("LSHR", 123);
        m.put("IUSHR", 124);
        m.put("LUSHR", 125);
        m.put("IAND", 126);
        m.put("LAND", 127);
        m.put("IOR", 128);
        m.put("LOR", 129);
        m.put("IXOR", 130);
        m.put("LXOR", 131);
        m.put("IINC", 132);
        m.put("I2L", 133);
        m.put("I2F", 134);
        m.put("I2D", 135);
        m.put("L2I", 136);
        m.put("L2F", 137);
        m.put("L2D", 138);
        m.put("F2I", 139);
        m.put("F2L", 140);
        m.put("F2D", 141);
        m.put("D2I", 142);
        m.put("D2L", 143);
        m.put("D2F", 144);
        m.put("I2B", 145);
        m.put("I2C", 146);
        m.put("I2S", 147);
        m.put("LCMP", 148);
        m.put("FCMPL", 149);
        m.put("FCMPG", 150);
        m.put("DCMPL", 151);
        m.put("DCMPG", 152);
        m.put("IFEQ", 153);
        m.put("IFNE", 154);
        m.put("IFLT", 155);
        m.put("IFGE", 156);
        m.put("IFGT", 157);
        m.put("IFLE", 158);
        m.put("IF_ICMPEQ", 159);
        m.put("IF_ICMPNE", 160);
        m.put("IF_ICMPLT", 161);
        m.put("IF_ICMPGE", 162);
        m.put("IF_ICMPGT", 163);
        m.put("IF_ICMPLE", 164);
        m.put("IF_ACMPEQ", 165);
        m.put("IF_ACMPNE", 166);
        m.put("GOTO", 167);
        m.put("JSR", 168);
        m.put("RET", 169);
        m.put("TABLESWITCH", 170);
        m.put("LOOKUPSWITCH", 171);
        m.put("IRETURN", 172);
        m.put("LRETURN", 173);
        m.put("FRETURN", 174);
        m.put("DRETURN", 175);
        m.put("ARETURN", 176);
        m.put("RETURN", 177);
        m.put("GETSTATIC", 178);
        m.put("PUTSTATIC", 179);
        m.put("GETFIELD", 180);
        m.put("PUTFIELD", 181);
        m.put("INVOKEVIRTUAL", 182);
        m.put("INVOKESPECIAL", 183);
        m.put("INVOKESTATIC", 184);
        m.put("INVOKEINTERFACE", 185);
        m.put("INVOKEDYNAMIC", 186);
        m.put("NEW", 187);
        m.put("NEWARRAY", 188);
        m.put("ANEWARRAY", 189);
        m.put("ARRAYLENGTH", 190);
        m.put("ATHROW", 191);
        m.put("CHECKCAST", 192);
        m.put("INSTANCEOF", 193);
        m.put("MONITORENTER", 194);
        m.put("MONITOREXIT", 195);
        m.put("MULTIANEWARRAY", 197);
        m.put("IFNULL", 198);
        m.put("IFNONNULL", 199);
    });
}
